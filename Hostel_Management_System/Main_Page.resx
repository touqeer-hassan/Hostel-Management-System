<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        OAAAAABJRU5ErkJggg==
</value>
  </data>
</root>